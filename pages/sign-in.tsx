import { NextPage } from "next";

import { ChangeEventHandler, FormEventHandler, useState } from "react";

import Head from "next/head";
import SignInSection from "../components/SignInSection";
import supabase from "../util/supabase";

import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { useRouter } from "next/dist/client/router";
import SignInHero from "../components/SignInHero";
import { useAuthContext } from "../context/Auth";

const SignIn: NextPage = () => {
  const [email, setEmail] = useState("");
  const [pwd, setPwd] = useState("");
  const { user } = useAuthContext();

  const router = useRouter();
  //If the user is authenticated, then go back
  if (user) router.push("/");

  const handleEmailChange: ChangeEventHandler<HTMLInputElement> = (e) => {
    setEmail(e.target.value);
  };

  const handlePasswordChange: ChangeEventHandler<HTMLInputElement> = (e) => {
    setPwd(e.target.value);
  };

  const handleSignIn: FormEventHandler = async (e) => {
    e.preventDefault();
    if (email == "" || pwd == "") {
      toast.info("ðŸ˜ª Did your forget something?");
      return;
    }
    const user = await supabase.auth.signIn({ email: email, password: pwd });

    if (user.error) {
      toast.error("An error has occured");
      return;
    }
    if (user) {
      router.push("/");
    }
  };

  return (
    <div className="flex box-border">
      <Head>
        <title>Studify | Sign In</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ToastContainer position="top-center" autoClose={3000} />
      <SignInSection
        emailOnChange={handleEmailChange}
        passwordOnChange={handlePasswordChange}
        onSubmit={handleSignIn}
      />
      <SignInHero />
    </div>
  );
};

// export const getServerSideProps: GetServerSideProps = async () => {
//   const user = await supabase.auth.session()?.user;
//   console.log(user);

//   if (user) {
//     console.log("Theres a user");
//   }
//   return { props: {} };
// };

export default SignIn;
